{"ast":null,"code":"import _defineProperty from \"/Users/isabel/Desktop/BOOTCAMP-PROJECTS/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/isabel/Desktop/BOOTCAMP-PROJECTS/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/isabel/Desktop/BOOTCAMP-PROJECTS/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/isabel/Desktop/BOOTCAMP-PROJECTS/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/isabel/Desktop/BOOTCAMP-PROJECTS/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/isabel/Desktop/BOOTCAMP-PROJECTS/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/isabel/Desktop/BOOTCAMP-PROJECTS/Google-Books-Search/client/src/pages/Search.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Wrapper from \"../components/Wrapper\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport Moment from \"moment\";\nimport \"../index.css\";\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      title: \"\",\n      errorMessage: \"Type in the title of a book you'd like to read!\"\n    };\n\n    _this.loadBooks = function (data) {\n      var objBooks = {\n        books: []\n      };\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].volumeInfo.imageLinks) {\n          var item = {\n            id: data[i].id,\n            title: data[i].volumeInfo.title,\n            authors: data[i].volumeInfo.authors,\n            publishedDate: data[i].volumeInfo.publishedDate,\n            description: data[i].volumeInfo.description,\n            image: data[i].volumeInfo.imageLinks.thumbnail,\n            link: data[i].volumeInfo.previewLink\n          };\n          objBooks.books.push(item);\n        }\n      }\n\n      _this.setState({\n        books: objBooks.books,\n        title: \"\"\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSearchSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.title) {\n        API.getBooksGoo(_this.state.title).then(function (res) {\n          _this.loadBooks(res.data.items);\n        }).catch(function (err) {\n          console.log(err);\n\n          _this.setState({\n            errorMessage: \"Oh No! We couldn't find any books related to your query!\"\n          });\n        });\n      }\n    };\n\n    _this.handleSaveBook = function (id) {\n      var savedBook = _this.state.books.filter(function (book) {\n        return book.id === id;\n      });\n\n      var bookDetails = {\n        googleId: id,\n        title: savedBook[0].title,\n        author: savedBook[0].authors,\n        description: savedBook[0].description,\n        image: savedBook[0].image,\n        link: savedBook[0].link,\n        date: savedBook[0].publishedDate\n      };\n      API.saveBook(bookDetails).then(function (res) {\n        _this.props.history.push(\"/saved\");\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Row, {\n        className: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"search__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"search__form--heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Book Search:\"), React.createElement(Input, {\n        className: \"search__form--input\",\n        value: this.state.title,\n        onChange: this.handleInputChange,\n        name: \"title\",\n        placeholder: \"Title (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        className: \"search__form--button\",\n        disabled: !this.state.title,\n        onClick: this.handleSearchSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Search\"))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.state.books.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(ListItem, {\n          key: book.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: book.link,\n          rel: \"noopener noreferrer\",\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, book.title), React.createElement(\"img\", {\n          src: book.image,\n          alt: book.title,\n          className: \"book-image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"list-author\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"Written by: \", book.authors), React.createElement(\"p\", {\n          className: \"list-publish\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Published on: \", Moment(book.publishedDate, \"YYYY-MM-DDTHh:mm:ss\").format(\"MM/DD/YYYY\")), React.createElement(\"p\", {\n          className: \"list-description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, book.description), React.createElement(\"button\", {\n          className: \"list-button\",\n          onClick: function onClick() {\n            return _this2.handleSaveBook(book.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"Save \"));\n      })) : React.createElement(\"p\", {\n        className: \"search__form--openmsg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.state.errorMessage))));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/isabel/Desktop/BOOTCAMP-PROJECTS/Google-Books-Search/client/src/pages/Search.js"],"names":["React","Component","Jumbotron","Wrapper","API","Col","Row","Container","List","ListItem","Input","FormBtn","Moment","Search","state","books","title","errorMessage","loadBooks","data","objBooks","i","length","volumeInfo","imageLinks","item","id","authors","publishedDate","description","image","thumbnail","link","previewLink","push","setState","handleInputChange","event","target","name","value","handleSearchSubmit","preventDefault","getBooksGoo","then","res","items","catch","err","console","log","handleSaveBook","savedBook","filter","book","bookDetails","googleId","author","date","saveBook","props","history","map","format"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Wrapper from \"../components/Wrapper\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport Moment from \"moment\";\nimport \"../index.css\";\n\nclass Search extends Component {\n  state = {\n    books: [],\n    title: \"\",\n    errorMessage: \"Type in the title of a book you'd like to read!\"\n  };\n\n  loadBooks = (data) => {\n\n    let objBooks = { books: [] };\n\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].volumeInfo.imageLinks) {\n        let item = {\n          id: data[i].id,\n          title: data[i].volumeInfo.title,\n          authors: data[i].volumeInfo.authors,\n          publishedDate: data[i].volumeInfo.publishedDate,\n          description: data[i].volumeInfo.description,\n          image: data[i].volumeInfo.imageLinks.thumbnail,\n          link: data[i].volumeInfo.previewLink,\n        }\n        objBooks.books.push(item)\n      }\n    }\n    this.setState({ books: objBooks.books, title: \"\"})\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSearchSubmit = event => {\n    event.preventDefault();\n    if (this.state.title) {\n      API.getBooksGoo(this.state.title)\n        .then(res => {\n          this.loadBooks(res.data.items);\n        })\n        .catch(err => {\n          console.log(err)\n          this.setState({\n            errorMessage: \"Oh No! We couldn't find any books related to your query!\"\n          });\n        });\n    }\n  };\n  // Add to this function \n  handleSaveBook = id => {\n    const savedBook = this.state.books.filter(book => book.id === id)\n    const bookDetails = {\n      googleId: id,\n      title: savedBook[0].title,\n      author: savedBook[0].authors,\n      description: savedBook[0].description,\n      image: savedBook[0].image,\n      link: savedBook[0].link,\n      date: savedBook[0].publishedDate\n    }\n    API.saveBook(bookDetails)\n      .then(res => {\n        this.props.history.push(\"/saved\");\n      })\n      .catch(err => console.log(err));\n\n  };\n\n  render() {\n    return (\n      <Container >\n        <Jumbotron />\n        <Row className=\"search\">\n          <Col size=\"md-12\">\n            <Wrapper>\n              <form className=\"search__form\">\n              <p className= \"search__form--heading\">Book Search:</p>\n                <Input className=\"search__form--input\"\n                  value={this.state.title}\n                  onChange={this.handleInputChange}\n                  name=\"title\"\n                  placeholder=\"Title (required)\"\n                />\n                <FormBtn className=\"search__form--button\"\n                  disabled={!(this.state.title)}\n                  onClick={this.handleSearchSubmit}\n                >\n                  Search\n              </FormBtn>\n              </form>\n            </Wrapper>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12 sm-12\">\n            {this.state.books.length ? (\n              <List>\n                {this.state.books.map(book => (\n                  <ListItem key={book.id}>\n                    <a href={book.link} rel=\"noopener noreferrer\" target=\"_blank\">{book.title}</a>\n                    <img src={book.image} alt={book.title} className=\"book-image\" />\n                    <p className=\"list-author\">Written by: {book.authors}</p>\n                    <p className=\"list-publish\">Published on: {Moment(book.publishedDate, \"YYYY-MM-DDTHh:mm:ss\").format(\"MM/DD/YYYY\")}</p>\n                    <p className=\"list-description\">{book.description}</p>\n                    <button className=\"list-button\" onClick={() => this.handleSaveBook(book.id)}>Save </button>\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n                <p className=\"search__form--openmsg\">{this.state.errorMessage}</p>\n              )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}