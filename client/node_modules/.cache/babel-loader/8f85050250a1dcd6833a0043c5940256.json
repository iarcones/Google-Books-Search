{"ast":null,"code":"import _classCallCheck from \"/Users/isabel/Desktop/BOOTCAMP-PROJECTS/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/isabel/Desktop/BOOTCAMP-PROJECTS/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/isabel/Desktop/BOOTCAMP-PROJECTS/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/isabel/Desktop/BOOTCAMP-PROJECTS/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/isabel/Desktop/BOOTCAMP-PROJECTS/Google-Books-Search/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/isabel/Desktop/BOOTCAMP-PROJECTS/Google-Books-Search/client/src/pages/Saved.js\";\nimport React, { Component } from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { List, ListItem } from \"../components/List\"; // import DeleteBtn from \"../components/DeleteBtn\";\n\nimport API from \"../utils/API\";\nimport Moment from \"moment\";\nimport \"../index.css\";\n\nvar Saved =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Saved, _Component);\n\n  function Saved() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Saved);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Saved)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      errorMessage: \"\"\n    };\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        return _this.setState({\n          books: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleDeleteBook = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }) //We need to think where this needs to go, and what we show, a clean screen??? because can't load the same books\n      .catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Saved, [{\n    key: \"componentDidMount\",\n    // Life-cycle function that executes when the components mount (page loads)\n    value: function componentDidMount() {\n      this.loadBooks();\n    } // Function to load all books from the database\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.state.books.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(ListItem, {\n          key: book._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: book.link,\n          rel: \"noopener noreferrer\",\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, book.title), React.createElement(\"img\", {\n          src: book.image,\n          alt: book.title,\n          className: \"book-image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"list-author\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Written by: \", book.author), React.createElement(\"p\", {\n          className: \"list-publish\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Published on: \", Moment(book.date, \"YYYY-MM-DDTHh:mm:ss\").format(\"MM/DD/YYYY\")), React.createElement(\"p\", {\n          className: \"list-description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, book.description), React.createElement(\"button\", {\n          className: \"list-button\",\n          onClick: function onClick() {\n            return _this2.handleDeleteBook(book._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Delete \"));\n      })) : React.createElement(\"p\", {\n        className: \"search__form--alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Oh No! It looks like you don't have any saved books!\"))));\n    }\n  }]);\n\n  return Saved;\n}(Component);\n\nexport default Saved;","map":{"version":3,"sources":["/Users/isabel/Desktop/BOOTCAMP-PROJECTS/Google-Books-Search/client/src/pages/Saved.js"],"names":["React","Component","Col","Row","Container","Jumbotron","List","ListItem","API","Moment","Saved","state","books","errorMessage","loadBooks","getBooks","then","res","setState","data","catch","err","console","log","handleDeleteBook","id","deleteBook","length","map","book","_id","link","title","image","author","date","format","description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { List, ListItem } from \"../components/List\";\n// import DeleteBtn from \"../components/DeleteBtn\";\nimport API from \"../utils/API\";\nimport Moment from \"moment\";\nimport \"../index.css\";\n\nclass Saved extends Component {\n  state = {\n    books: [],\n    errorMessage: \"\"\n  };\n  // Life-cycle function that executes when the components mount (page loads)\n  componentDidMount() {\n    this.loadBooks();\n  }\n  // Function to load all books from the database\n  loadBooks = () => {\n    API.getBooks()\n      .then(res => this.setState({ books: res.data }))\n      .catch(err => console.log(err));\n  };\n\n  // Function to delete book from Saved page\n  handleDeleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks()) //We need to think where this needs to go, and what we show, a clean screen??? because can't load the same books\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <Container >\n        <Jumbotron />\n        <Row>\n          <Col size=\"md-12 sm-12\">\n            {this.state.books.length ? (\n              <List>\n                {this.state.books.map(book => (\n                  <ListItem key={book._id}>\n                    <a href={book.link} rel=\"noopener noreferrer\" target=\"_blank\">{book.title}</a>\n                    <img src={book.image} alt={book.title} className=\"book-image\" />\n                    <p className=\"list-author\">Written by: {book.author}</p>\n                    <p className=\"list-publish\">Published on: {Moment(book.date, \"YYYY-MM-DDTHh:mm:ss\").format(\"MM/DD/YYYY\")}</p>\n                    <p className=\"list-description\">{book.description}</p>\n                    <button className=\"list-button\" onClick={() => this.handleDeleteBook(book._id)}>Delete </button>\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <p className=\"search__form--alert\">Oh No! It looks like you don't have any saved books!</p>\n              )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Saved;\n"]},"metadata":{},"sourceType":"module"}